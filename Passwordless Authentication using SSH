Method-1: SSH authentication

Step-1: Create 3 EC2 instances in a region 
Control Node -1
Managed Nodes -2
Gather private and public IPs of the nodes


Step-2: Now Login and Install ansible on Control Node 

```sudo apt update -y```
```sudo apt install ansible -y```
```sudo apt-get install python3-pip```

Step-3: Generate Public for Control Node

##This command will prompt you to save the key (~/.ssh/id_rsa) as we are practicing leave the passphrase blank and continue. 

```ssh-keygen -t rsa```

##This command prints the public key contents

```cat ~/.ssh/id_rsa```

## lists the public key file

```ls -l ~/.ssh/id_rsa.pub```

##Opens the inventory file where managed node IP address has to be provided

```nano ~/inventory```

## [managed nodes]

target ansible_host=<ansible-target-private-ip> ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa

[target_node]

(Node Private IP  ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa)

Step-4: Login to Managed Node

Copy the public key contents of control node to target node

```echo "<PASTE_PUBLIC_KEY_HERE>" >> ~/.ssh/authorized_keys```

```chmod 600 ~/.ssh/authorized_keys```

##Restart managed node
```sudo systemctl restart ssh```

Step-5: Test SSH connection from Control node

```ssh ubuntu@<target_node_Private_IP>```

```ssh ubuntu@<target_node_Private_IP>```

Step-6: Test Ansible Connectivity

```ansible all -m ping -i ~/inventory```

##This command connects the  control node to target node without any password prompt


